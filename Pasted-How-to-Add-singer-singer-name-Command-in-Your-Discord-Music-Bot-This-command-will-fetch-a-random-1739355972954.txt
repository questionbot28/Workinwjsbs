How to Add !singer <singer_name> Command in Your Discord Music Bot

This command will fetch a random song from a given singer and play it in a voice channel.


---

Step 1: Setup APIs (Choose One)

Option 1: YouTube API (Best for Playing Songs)

Get a YouTube Data API Key from Google Developers Console.

Use youtube_dl or yt-dlp to play audio.


Option 2: Spotify API (Best for Finding Songs)

Create a Spotify Developer Account.

Get Client ID & Secret from Spotify Developer Dashboard.

Use the spotipy library to fetch songs.



---

Step 2: Install Required Libraries

Run this in your terminal or Replit shell:

pip install discord.py yt-dlp spotipy


---

Step 3: Get a Random Song from YouTube

Modify this function to search for a random song by a singer on YouTube:

import random
import yt_dlp
import requests

def get_random_youtube_song(singer):
    query = f"{singer} songs"
    search_url = f"https://www.youtube.com/results?search_query={query.replace(' ', '+')}"

    # Get search results (Scraping method)
    response = requests.get(search_url)
    video_ids = [line.split('watch?v=')[1].split('"')[0] for line in response.text.split() if 'watch?v=' in line]

    if video_ids:
        return f"https://www.youtube.com/watch?v={random.choice(video_ids)}"
    else:
        return None


---

Step 4: Add !singer Command to Your Bot

Now, integrate this function into your Discord bot:

import discord
from discord.ext import commands
import random

bot = commands.Bot(command_prefix="!", intents=discord.Intents.all())

@bot.command()
async def singer(ctx, *, singer_name: str):
    """Plays a random song from the given singer."""
    song_url = get_random_youtube_song(singer_name)
    
    if song_url:
        await ctx.send(f"üé∂ Playing a random song by **{singer_name}**: {song_url}")
    else:
        await ctx.send(f"‚ùå No songs found for **{singer_name}**.")

bot.run("YOUR_BOT_TOKEN")


---

Step 5: Make It Play in a Voice Channel

Modify the singer command to join a voice channel and play the song:

@bot.command()
async def singer(ctx, *, singer_name: str):
    """Joins a voice channel and plays a random song from the given singer."""
    
    # Join voice channel
    if ctx.author.voice:
        channel = ctx.author.voice.channel
        voice_client = await channel.connect()
    else:
        await ctx.send("‚ùå You need to be in a voice channel!")
        return

    # Get random song URL
    song_url = get_random_youtube_song(singer_name)
    if not song_url:
        await ctx.send(f"‚ùå No songs found for **{singer_name}**.")
        return

    # Play the song using yt-dlp
    ffmpeg_options = {"options": "-vn"}
    ydl_opts = {"format": "bestaudio"}

    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        info = ydl.extract_info(song_url, download=False)
        url = info["url"]

    voice_client.play(discord.FFmpegPCMAudio(url, **ffmpeg_options))
    await ctx.send(f"üé∂ Now playing: {song_url}")


---

Step 6: Deploy Your Bot

Run the bot on Replit, Heroku, or a VPS (like Linode, DigitalOcean).

Use keep_alive.py (for Replit) to prevent auto shutdown.



---

Bonus Features (Next-Level)

‚úÖ Mood-Based Playlists (e.g., !mood happy for happy songs)
‚úÖ Top 10 Trending Songs of Singer
‚úÖ Lyrics Display with Genius API
‚úÖ DJ Mode (Vote Skip, Auto Queue, etc.)

Do you want me to add these features as well?

