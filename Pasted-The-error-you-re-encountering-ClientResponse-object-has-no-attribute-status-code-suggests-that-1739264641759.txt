The error you're encountering, 'ClientResponse' object has no attribute 'status_code', suggests that you're using aiohttp or an asynchronous HTTP request library (which is common in Discord bots). The status_code attribute is specific to requests, but in async requests, you need to use a different approach.

Fixing the Error

Since the error is happening because of mixing synchronous and asynchronous requests, we'll modify the code to work with aiohttp (which is asynchronous).

Here‚Äôs the Updated Code:

import lyricsgenius
import discord
import aiohttp
from discord.ext import commands

bot = commands.Bot(command_prefix="!")

# Set up the Genius API with your API key
genius = lyricsgenius.Genius("YOUR_GENIUS_API_KEY")  # Replace with your Genius API key

@bot.command()
async def lyrics(ctx, *, song_name):
    await ctx.send("üîç Searching for lyrics...")

    # Search for the song using the Genius API
    song = genius.search_song(song_name)

    if song:
        song_url = song.url  # Get the URL of the song page

        # Use aiohttp to make an async request
        async with aiohttp.ClientSession() as session:
            async with session.get(song_url) as response:
                if response.status == 200:
                    # Parse the page and extract the lyrics
                    html = await response.text()

                    # Scrape the lyrics
                    soup = BeautifulSoup(html, 'html.parser')
                    lyrics_div = soup.find('div', class_='lyrics')

                    if lyrics_div:
                        lyrics = lyrics_div.get_text()  # Extract the lyrics text
                        lyrics = lyrics.strip()  # Clean up any extra whitespace
                        lyrics = lyrics[:2000]  # Limit lyrics to 2000 characters for Discord

                        embed = discord.Embed(title=f"üé§ Lyrics for {song_name}", description=lyrics, color=discord.Color.blue())
                        embed.set_footer(text="Powered by Genius")
                        await ctx.send(embed=embed)
                    else:
                        await ctx.send("‚ùå Could not extract lyrics from Genius.")
                else:
                    await ctx.send("‚ùå Error fetching lyrics from Genius. Please try again later.")
    else:
        await ctx.send("‚ùå Lyrics not found for this song.")

Key Changes:

aiohttp Usage: We are using aiohttp for asynchronous HTTP requests.

Response Handling: We replaced response.status_code with response.status, which is the correct way in aiohttp.

await response.text(): This gets the content of the page as text asynchronously.


Ensure You Have aiohttp Installed:

In your Replit shell, run this to install aiohttp:

pip install aiohttp


---

Test the Command:

After updating the code, try the !lyrics <song name> command in Discord again. Let me know if you face any other issues!

